From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lumine1909 <133463833+Lumine1909@users.noreply.github.com>
Date: Tue, 22 Apr 2025 23:32:41 +0800
Subject: [PATCH] Leaves Utils


diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 3d2c0a4d3a1f9d3e5cc6cd0cdb988ae1205de821..910bec7cbb2ef140ab16d99f93859326b5475a25 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -372,6 +372,8 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public boolean isTemporarilyActive;
     public long activatedImmunityTick = Integer.MIN_VALUE;
 
+    private net.minecraft.nbt.CompoundTag leavesData = new net.minecraft.nbt.CompoundTag(); // Leaves - Leaves ex data
+
     public void inactiveTick() {
     }
     // Paper end - EAR 2
@@ -2585,6 +2587,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                 output.putBoolean("Paper.FreezeLock", true);
             }
             // Paper end
+            output.store("Leaves.Data", net.minecraft.nbt.CompoundTag.CODEC, leavesData); // Leaves - leaves ex data
         } catch (Throwable var7) {
             CrashReport crashReport = CrashReport.forThrowable(var7, "Saving entity NBT");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Entity being saved");
@@ -2705,6 +2708,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             }
             freezeLocked = input.getBooleanOr("Paper.FreezeLock", false);
             // Paper end
+            leavesData = input.read("Leaves.Data", net.minecraft.nbt.CompoundTag.CODEC).orElse(new net.minecraft.nbt.CompoundTag());
         } catch (Throwable var7) {
             CrashReport crashReport = CrashReport.forThrowable(var7, "Loading entity NBT");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Entity being loaded");
@@ -5365,4 +5369,9 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return ((ServerLevel) this.level()).isPositionEntityTicking(this.blockPosition());
     }
     // Paper end - Expose entity id counter
+    // Leaves start - leaves ex data
+    public CompoundTag getLeavesData() {
+        return leavesData;
+    }
+    // Leaves end - leaves ex data
 }
diff --git a/net/minecraft/world/level/block/Block.java b/net/minecraft/world/level/block/Block.java
index be6f37f91569c659c609e5e8d38671ca86f8cd95..958914e40fceda5d67a98154817b4c5ce478a62d 100644
--- a/net/minecraft/world/level/block/Block.java
+++ b/net/minecraft/world/level/block/Block.java
@@ -610,6 +610,13 @@ public class Block extends BlockBehaviour implements ItemLike {
     }
     // CraftBukkit end
 
+    // Leaves start - reset push reaction
+    @org.jetbrains.annotations.Nullable
+    public net.minecraft.world.level.material.PushReaction getResetPushReaction() {
+        return null;
+    }
+    // Leaves end - reset push reaction
+
     record ShapePairKey(VoxelShape first, VoxelShape second) {
         @Override
         public boolean equals(Object other) {
diff --git a/net/minecraft/world/level/block/state/BlockBehaviour.java b/net/minecraft/world/level/block/state/BlockBehaviour.java
index 834e27ef2f7b342b074ff9e1e390e02f3ca1c399..be66f0f1cb1b0bcec8f9489a1fdd8777df1adb6b 100644
--- a/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -763,7 +763,7 @@ public abstract class BlockBehaviour implements FeatureElement {
         }
 
         public PushReaction getPistonPushReaction() {
-            return !this.isDestroyable() ? PushReaction.BLOCK : this.pushReaction; // Paper - Protect Bedrock and End Portal/Frames from being destroyed
+            return !this.isDestroyable() ? PushReaction.BLOCK : this.getBlock().getResetPushReaction() == null ? this.pushReaction : this.getBlock().getResetPushReaction(); // Paper - Protect Bedrock and End Portal/Frames from being destroyed // Leaves - reset push reaction
         }
 
         public boolean isSolidRender() {
