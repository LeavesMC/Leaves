From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lumine1909 <133463833+Lumine1909@users.noreply.github.com>
Date: Tue, 22 Apr 2025 23:32:41 +0800
Subject: [PATCH] Leaves entity ex data


diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 9344cdbad8415f6ff4d592d3f13390e85477a10d..9053e3c2369401663e511d385560011300b18b57 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -372,6 +372,8 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public boolean isTemporarilyActive;
     public long activatedImmunityTick = Integer.MIN_VALUE;
 
+    private net.minecraft.nbt.CompoundTag leavesData = new net.minecraft.nbt.CompoundTag(); // Leaves - Leaves ex data
+
     public void inactiveTick() {
     }
     // Paper end - EAR 2
@@ -2585,6 +2587,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                 output.putBoolean("Paper.FreezeLock", true);
             }
             // Paper end
+            output.store("Leaves.Data", net.minecraft.nbt.CompoundTag.CODEC, leavesData); // Leaves - leaves ex data
         } catch (Throwable var7) {
             CrashReport crashReport = CrashReport.forThrowable(var7, "Saving entity NBT");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Entity being saved");
@@ -2596,7 +2599,8 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public void load(ValueInput input) {
         try {
             Vec3 vec3 = input.read("Pos", Vec3.CODEC).orElse(Vec3.ZERO);
-            Vec3 vec31 = input.read("Motion", Vec3.CODEC).orElse(Vec3.ZERO); vec31 = io.papermc.paper.util.MCUtil.sanitizeNanInf(vec31, 0D); // Paper - avoid setting NaN values
+            Vec3 vec31 = input.read("Motion", Vec3.CODEC).orElse(Vec3.ZERO);
+            vec31 = io.papermc.paper.util.MCUtil.sanitizeNanInf(vec31, 0D); // Paper - avoid setting NaN values
             Vec2 vec2 = input.read("Rotation", Vec2.CODEC).orElse(Vec2.ZERO);
             this.setDeltaMovement(Math.abs(vec31.x) > 10.0 ? 0.0 : vec31.x, Math.abs(vec31.y) > 10.0 ? 0.0 : vec31.y, Math.abs(vec31.z) > 10.0 ? 0.0 : vec31.z);
             this.hasImpulse = true;
@@ -2608,7 +2612,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             this.setYHeadRot(this.getYRot());
             this.setYBodyRot(this.getYRot());
             this.fallDistance = input.getDoubleOr("fall_distance", 0.0);
-            this.remainingFireTicks = input.getShortOr("Fire", (short)0);
+            this.remainingFireTicks = input.getShortOr("Fire", (short) 0);
             this.setAirSupply(input.getIntOr("Air", this.getMaxAirSupply()));
             this.onGround = input.getBooleanOr("OnGround", false);
             this.invulnerable = input.getBooleanOr("Invulnerable", false);
@@ -2662,7 +2666,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             this.persist = input.getBooleanOr("Bukkit.persist", true);
             this.visibleByDefault = input.getBooleanOr("Bukkit.visibleByDefault", true);
             // SPIGOT-6907: re-implement LivingEntity#setMaximumAir()
-            this.maxAirTicks = input.getIntOr("Bukkit.MaxAirSupply",this.maxAirTicks);
+            this.maxAirTicks = input.getIntOr("Bukkit.MaxAirSupply", this.maxAirTicks);
             // CraftBukkit end
 
             // CraftBukkit start
@@ -2705,6 +2709,10 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             }
             freezeLocked = input.getBooleanOr("Paper.FreezeLock", false);
             // Paper end
+            // Leaves start - leaves ex data
+            leavesData = input.read("Leaves.Data", net.minecraft.nbt.CompoundTag.CODEC)
+                .orElse(new net.minecraft.nbt.CompoundTag());
+            // Leaves end - leaves ex data
         } catch (Throwable var7) {
             CrashReport crashReport = CrashReport.forThrowable(var7, "Loading entity NBT");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Entity being loaded");
@@ -5365,4 +5373,9 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return ((ServerLevel) this.level()).isPositionEntityTicking(this.blockPosition());
     }
     // Paper end - Expose entity id counter
+    // Leaves start - leaves ex data
+    public net.minecraft.nbt.CompoundTag getLeavesData() {
+        return leavesData;
+    }
+    // Leaves end - leaves ex data
 }
