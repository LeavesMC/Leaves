From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Sun, 11 Dec 2022 18:43:35 +0800
Subject: [PATCH] Player operation limiter

This patch is Powered by plusls-carpet-addition(https://github.com/plusls/plusls-carpet-addition)

diff --git a/net/minecraft/server/level/ServerPlayer.java b/net/minecraft/server/level/ServerPlayer.java
index 87c8c4c7ca52f7d804ddaff87aaf381552e1aee2..29b8e7b6d96ff7ca2dd53f00ea2010e6aad83a52 100644
--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -429,6 +429,10 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
     public boolean isRealPlayer; // Paper
     public @Nullable com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent playerNaturallySpawnedEvent; // Paper - PlayerNaturallySpawnCreaturesEvent
     public @Nullable org.bukkit.event.player.PlayerQuitEvent.QuitReason quitReason = null; // Paper - Add API for quit reason; there are a lot of changes to do if we change all methods leading to the event
+    // Leaves start - player operation limiter
+    private int instaBreakCountPerTick = 0;
+    private int placeBlockCountPerTick = 0;
+    // Leaves end - player operation limiter
 
     // Paper start - rewrite chunk system
     private ca.spottedleaf.moonrise.patches.chunk_system.player.RegionizedPlayerChunkLoader.PlayerChunkLoaderData chunkLoader;
@@ -745,6 +749,7 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
         }
         // CraftBukkit end
         this.tickClientLoadTimeout();
+        this.resetOperationCountPerTick(); // Leaves - player operation limiter
         this.gameMode.tick();
         this.wardenSpawnTracker.tick();
         if (this.invulnerableTime > 0) {
@@ -2981,4 +2986,31 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
         return (org.bukkit.craftbukkit.entity.CraftPlayer) super.getBukkitEntity();
     }
     // CraftBukkit end
+
+    // Leaves start - player operation limiter
+    protected void resetOperationCountPerTick() {
+        instaBreakCountPerTick = 0;
+        placeBlockCountPerTick = 0;
+    }
+
+    public int getInstaBreakCountPerTick() {
+        return instaBreakCountPerTick;
+    }
+
+    public int getPlaceBlockCountPerTick() {
+        return placeBlockCountPerTick;
+    }
+
+    public void addInstaBreakCountPerTick() {
+        ++instaBreakCountPerTick;
+    }
+
+    public void addPlaceBlockCountPerTick() {
+        ++placeBlockCountPerTick;
+    }
+
+    public boolean allowOperation() {
+        return (instaBreakCountPerTick == 0 || placeBlockCountPerTick == 0) && (instaBreakCountPerTick <= 1 && placeBlockCountPerTick <= 2);
+    }
+    // Leaves end - player operation limiter
 }
diff --git a/net/minecraft/server/level/ServerPlayerGameMode.java b/net/minecraft/server/level/ServerPlayerGameMode.java
index cfbf34964288526e93d0a5b212c1b60296c10430..9cce442c16ced8d9320a5760580ff13f02cbf8f1 100644
--- a/net/minecraft/server/level/ServerPlayerGameMode.java
+++ b/net/minecraft/server/level/ServerPlayerGameMode.java
@@ -300,6 +300,19 @@ public class ServerPlayerGameMode {
     }
 
     public void destroyAndAck(BlockPos pos, int sequence, String message) {
+        // Leaves start - player operation limiter
+        if (org.leavesmc.leaves.LeavesConfig.modify.playerOperationLimiter) {
+            if (message.equals("insta mine")) {
+                player.addInstaBreakCountPerTick();
+                if (!player.allowOperation()) {
+                    this.level.getCraftServer().getPluginManager().callEvent(new org.leavesmc.leaves.event.player.PlayerOperationLimitEvent(player.getBukkitEntity(), org.leavesmc.leaves.event.player.PlayerOperationLimitEvent.Operation.MINE, org.bukkit.craftbukkit.block.CraftBlock.at(level, pos)));
+                    this.player.connection.send(new ClientboundBlockUpdatePacket(pos, this.level.getBlockState(pos)));
+                    this.debugLogging(pos, false, sequence, message);
+                    return;
+                }
+            }
+        }
+        // Leaves end - player operation limiter
         if (this.destroyBlock(pos)) {
             this.debugLogging(pos, true, sequence, message);
         } else {
diff --git a/net/minecraft/world/item/BlockItem.java b/net/minecraft/world/item/BlockItem.java
index 8f112f382190d606a87f38da8bcdf8dd5f31d1c5..a46a50d1385897cc7fcf0d6976f0de7e8078d260 100644
--- a/net/minecraft/world/item/BlockItem.java
+++ b/net/minecraft/world/item/BlockItem.java
@@ -65,6 +65,21 @@ public class BlockItem extends Item {
                 final org.bukkit.block.BlockState oldBukkitState = bukkitState != null ? bukkitState : org.bukkit.craftbukkit.block.CraftBlockStates.getBlockState(blockPlaceContext.getLevel(), blockPlaceContext.getClickedPos()); // Paper - Reset placed block on exception
                 // CraftBukkit end
 
+                // Leaves start - player operation limiter
+                if (org.leavesmc.leaves.LeavesConfig.modify.playerOperationLimiter && !context.getLevel().isClientSide()) {
+                    ServerPlayer player = (ServerPlayer) context.getPlayer();
+                    if (player != null && placementState != null) {
+                        player.addPlaceBlockCountPerTick();
+                        if (!player.allowOperation()) {
+                            if (bukkitState != null) {
+                                context.getLevel().getCraftServer().getPluginManager().callEvent(new org.leavesmc.leaves.event.player.PlayerOperationLimitEvent(player.getBukkitEntity(), org.leavesmc.leaves.event.player.PlayerOperationLimitEvent.Operation.PLACE, bukkitState.getBlock()));
+                            }
+                            return InteractionResult.FAIL;
+                        }
+                    }
+                }
+                // Leaves end - player operation limiter
+
                 if (placementState == null) {
                     return InteractionResult.FAIL;
                 } else if (!this.placeBlock(blockPlaceContext, placementState)) {
