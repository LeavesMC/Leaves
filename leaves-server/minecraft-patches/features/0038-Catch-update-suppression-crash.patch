From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Fri, 17 Mar 2023 15:57:08 +0800
Subject: [PATCH] Catch update suppression crash


diff --git a/net/minecraft/network/protocol/PacketUtils.java b/net/minecraft/network/protocol/PacketUtils.java
index 4535858701b2bb232b9d2feb2af6551526232ddc..43f84b1b762c4931981e0dca7ca3d3f46a7bc3bf 100644
--- a/net/minecraft/network/protocol/PacketUtils.java
+++ b/net/minecraft/network/protocol/PacketUtils.java
@@ -27,7 +27,20 @@ public class PacketUtils {
                 if (processor.shouldHandleMessage(packet)) {
                     try {
                         packet.handle(processor);
+                    // Leaves start - update suppression crash fix
+                    } catch (org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                        if (exception.noPlayer() && processor instanceof net.minecraft.server.network.ServerGamePacketListenerImpl gamePacketListener) {
+                            exception.applyPlayer(gamePacketListener.player);
+                        }
+                        exception.consume();
                     } catch (Exception var4) {
+                        if (var4.getCause() instanceof org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                            if (exception.noPlayer() && processor instanceof net.minecraft.server.network.ServerGamePacketListenerImpl gamePacketListener) {
+                                exception.applyPlayer(gamePacketListener.player);
+                            }
+                            exception.consume();
+                        }
+                        // Leaves end - update suppression crash fix
                         if (var4 instanceof ReportedException reportedException && reportedException.getCause() instanceof OutOfMemoryError) {
                             throw makeReportedException(var4, packet, processor);
                         }
diff --git a/net/minecraft/server/MinecraftServer.java b/net/minecraft/server/MinecraftServer.java
index 3aa719636ea2b68463a7f412a9cbd5bf3a7925a7..5aafc4346ba9f7759981024146cbd7b57b626a85 100644
--- a/net/minecraft/server/MinecraftServer.java
+++ b/net/minecraft/server/MinecraftServer.java
@@ -1725,7 +1725,22 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
             try {
                 serverLevel.tick(hasTimeLeft);
+            // Leaves start - update suppression crash fix
+            } catch (org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                if (exception.noLevel()) {
+                    exception.applyLevel(serverLevel).consume();
+                } else {
+                    exception.consume();
+                }
             } catch (Throwable var7) {
+                if (var7.getCause() instanceof org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                    if (exception.noLevel()) {
+                        exception.applyLevel(serverLevel).consume();
+                    } else {
+                        exception.consume();
+                    }
+                }
+                // Leaves end - update suppression crash fix
                 CrashReport crashReport = CrashReport.forThrowable(var7, "Exception ticking world");
                 serverLevel.fillReportDetails(crashReport);
                 throw new ReportedException(crashReport);
diff --git a/net/minecraft/server/level/ServerLevel.java b/net/minecraft/server/level/ServerLevel.java
index ed05aaa76e1e34ca82fcc7cfb73f371a11600eee..9c0a18605dbacb283ce6d8c090e302f6567d1a02 100644
--- a/net/minecraft/server/level/ServerLevel.java
+++ b/net/minecraft/server/level/ServerLevel.java
@@ -814,6 +814,14 @@ public class ServerLevel extends Level implements ServerEntityGetter, WorldGenLe
                                     if (org.leavesmc.leaves.LeavesConfig.performance.remove.tickGuardLambda) {
                                         try {
                                             this.tickNonPassenger(entity); // Leaves - changed
+                                        // Leaves start - update suppression crash fix - for dragon dupe
+                                        } catch (org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                                            if (exception.noLevel()) {
+                                                exception.applyLevel(this).consume();
+                                            } else {
+                                                exception.consume();
+                                            }
+                                        // Leaves end - update suppression crash fix - for dragon dupe
                                         } catch (Throwable throwable) {
                                             if (throwable instanceof ThreadDeath) throw throwable; // Paper
                                             // Paper start - Prevent block entity and entity crashes
diff --git a/net/minecraft/server/level/ServerPlayer.java b/net/minecraft/server/level/ServerPlayer.java
index 895cee538086e0494eb0f57c6e6b32ccd43e72e7..5d5a87c3e0bc2d61462ee7f48e3f186b86389681 100644
--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -905,6 +905,17 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
                 ((org.bukkit.craftbukkit.CraftWorldBorder) this.getBukkitEntity().getWorldBorder()).getHandle().tick();
             }
             // CraftBukkit end
+        // Leaves start - update suppression crash fix
+        } catch (org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+            org.leavesmc.leaves.util.UpdateSuppressionException e = exception;
+            if (e.noPlayer()) {
+                e.applyPlayer(this);
+            }
+            if (e.noLevel()) {
+                e.applyLevel(this.level());
+            }
+            e.consume();
+        // Leaves start - update suppression crash fix
         } catch (Throwable var4) {
             CrashReport crashReport = CrashReport.forThrowable(var4, "Ticking player");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Player being ticked");
diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index e6457e07e7e8e7690d160020b92fbc6874c1ec82..b698c0fce71fdb397add54158a8ae438a435a953 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -1351,9 +1351,23 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                     this.walkingStepSound(pos, state);
                 }
 
-                if (broadcastGameEvent) {
+                // Leaves start - update suppression crash fix
+                if (broadcastGameEvent) try {
                     this.level().gameEvent(GameEvent.STEP, this.position(), GameEvent.Context.of(this, state));
+                } catch (org.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                    org.leavesmc.leaves.util.UpdateSuppressionException e = exception;
+                    if (e.noLevel()) {
+                        e.applyLevel(level);
+                    }
+                    if (e.noPlayer() && this instanceof ServerPlayer player) {
+                        e.applyPlayer(player);
+                    }
+                    if (e.noBlock()) {
+                        e.applyBlock(pos, state.getBlock());
+                    }
+                    e.consume();
                 }
+                // Leaves end - update suppression crash fix
 
                 return true;
             } else {
diff --git a/net/minecraft/world/level/block/ShulkerBoxBlock.java b/net/minecraft/world/level/block/ShulkerBoxBlock.java
index 49bac7af90b0a7c490141be6357563447783c6ca..60d4875abfdc25183b260b53a5c874409c354b57 100644
--- a/net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ b/net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -183,7 +183,17 @@ public class ShulkerBoxBlock extends BaseEntityBlock {
 
     @Override
     protected int getAnalogOutputSignal(BlockState blockState, Level level, BlockPos pos) {
-        return AbstractContainerMenu.getRedstoneSignalFromBlockEntity(level.getBlockEntity(pos));
+        // Leaves start - update suppression crash fix
+        try {
+            return AbstractContainerMenu.getRedstoneSignalFromBlockEntity(level.getBlockEntity(pos));
+        } catch (ClassCastException ex) {
+            if (org.leavesmc.leaves.LeavesConfig.modify.updateSuppressionCrashFix) {
+                throw new org.leavesmc.leaves.util.UpdateSuppressionException(pos, null, this, null, ClassCastException.class);
+            } else {
+                throw ex;
+            }
+        }
+        // Leaves end - update suppression crash fix
     }
 
     public static Block getBlockByColor(@Nullable DyeColor color) {
diff --git a/net/minecraft/world/level/block/state/StateHolder.java b/net/minecraft/world/level/block/state/StateHolder.java
index 9b9842462b210b0407279ee8a8e9ccecf3ead005..94461270cb7a74d8f51c2f95e1104f27533af005 100644
--- a/net/minecraft/world/level/block/state/StateHolder.java
+++ b/net/minecraft/world/level/block/state/StateHolder.java
@@ -104,6 +104,7 @@ public abstract class StateHolder<O, S> implements ca.spottedleaf.moonrise.patch
         if (ret != null) {
             return ret;
         }
+        if (org.leavesmc.leaves.LeavesConfig.modify.updateSuppressionCrashFix) throw new org.leavesmc.leaves.util.UpdateSuppressionException(null, null, null, null, IllegalArgumentException.class); // Leaves - update suppression crash fix
         throw new IllegalArgumentException("Cannot get property " + property + " as it does not exist in " + this.owner);
         // Paper end - optimise blockstate property access
     }
diff --git a/net/minecraft/world/level/chunk/LevelChunk.java b/net/minecraft/world/level/chunk/LevelChunk.java
index f24db919989bc2e5768e18b4fda68c38d6cde7e0..6a5b3da447df93da7d81355b4efc35b6f3ed99ba 100644
--- a/net/minecraft/world/level/chunk/LevelChunk.java
+++ b/net/minecraft/world/level/chunk/LevelChunk.java
@@ -373,7 +373,7 @@ public class LevelChunk extends ChunkAccess implements ca.spottedleaf.moonrise.p
             if (blockState == state) {
                 return null;
             } else {
-                Block block = state.getBlock();
+                Block block = state.getBlock(); try { // Leaves start - update suppression crash fix
                 this.heightmaps.get(Heightmap.Types.MOTION_BLOCKING).update(i, y, i2, state);
                 this.heightmaps.get(Heightmap.Types.MOTION_BLOCKING_NO_LEAVES).update(i, y, i2, state);
                 this.heightmaps.get(Heightmap.Types.OCEAN_FLOOR).update(i, y, i2, state);
@@ -445,6 +445,7 @@ public class LevelChunk extends ChunkAccess implements ca.spottedleaf.moonrise.p
                     this.markUnsaved();
                     return blockState;
                 }
+                } catch (org.leavesmc.leaves.util.UpdateSuppressionException e) { e.applyBlock(level, pos, block); throw e; } // Leaves - update suppression crash fix
             }
         }
     }
diff --git a/net/minecraft/world/level/redstone/NeighborUpdater.java b/net/minecraft/world/level/redstone/NeighborUpdater.java
index 332b33a004ab11150cca0cc2cefc26d0286648f5..029e0a0ccbe42d20203954cadbb4a099c8f879cb 100644
--- a/net/minecraft/world/level/redstone/NeighborUpdater.java
+++ b/net/minecraft/world/level/redstone/NeighborUpdater.java
@@ -60,9 +60,22 @@ public interface NeighborUpdater {
             state.handleNeighborChanged(level, pos, neighborBlock, orientation, movedByPiston);
             // Spigot start
         } catch (StackOverflowError ex) {
+            // Leaves start - update suppression crash fix
+            if (org.leavesmc.leaves.LeavesConfig.modify.updateSuppressionCrashFix) {
+                throw new org.leavesmc.leaves.util.UpdateSuppressionException(pos, level, neighborBlock, null, StackOverflowError.class);
+            }
             level.lastPhysicsProblem = pos.immutable();
             // Spigot end
         } catch (Throwable var9) {
+            if (org.leavesmc.leaves.LeavesConfig.modify.updateSuppressionCrashFix) {
+                if (var9 instanceof org.leavesmc.leaves.util.UpdateSuppressionException ue) {
+                    ue.applyBlock(level, pos, neighborBlock);
+                    throw ue;
+                } else {
+                    throw new org.leavesmc.leaves.util.UpdateSuppressionException(pos, level, neighborBlock, null, var9.getClass());
+                }
+            }
+            // Leaves end - update suppression crash fix
             CrashReport crashReport = CrashReport.forThrowable(var9, "Exception while updating neighbours");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Block being updated");
             crashReportCategory.setDetail(
