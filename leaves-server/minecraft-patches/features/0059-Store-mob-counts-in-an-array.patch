From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lumine1909 <133463833+Lumine1909@users.noreply.github.com>
Date: Mon, 3 Feb 2025 22:11:25 -0500
Subject: [PATCH] Store mob counts in an array


diff --git a/net/minecraft/world/level/LocalMobCapCalculator.java b/net/minecraft/world/level/LocalMobCapCalculator.java
index 9641219c190261dea0db5f95f040a705ba0a3ff9..463a86eee6a75bdd8989b5bed46f118073a4fe25 100644
--- a/net/minecraft/world/level/LocalMobCapCalculator.java
+++ b/net/minecraft/world/level/LocalMobCapCalculator.java
@@ -43,13 +43,26 @@ public class LocalMobCapCalculator {
 
     static class MobCounts {
         private final Object2IntMap<MobCategory> counts = new Object2IntOpenHashMap<>(MobCategory.values().length);
+        public final int[] arrCounts = new int[MobCategory.values().length]; // Leaves - store mob counts in an array
 
         public void add(MobCategory category) {
-            this.counts.computeInt(category, (key, value) -> value == null ? 1 : value + 1);
+            // Leaves start - store mob counts in an array
+            if (!org.leavesmc.leaves.LeavesConfig.performance.storeMobCountsInArray) {
+                this.counts.computeInt(category, (group, density) -> density == null ? 1 : density + 1);
+            } else {
+                this.arrCounts[category.ordinal()]++;
+            }
+            // Leaves end - store mob counts in an array
         }
 
         public boolean canSpawn(MobCategory category) {
-            return this.counts.getOrDefault(category, 0) < category.getMaxInstancesPerChunk();
+            // Leaves start - store mob counts in an array
+            if (!org.leavesmc.leaves.LeavesConfig.performance.storeMobCountsInArray) {
+                return this.counts.getOrDefault(category, 0) < category.getMaxInstancesPerChunk();
+            } else {
+                return this.arrCounts[category.ordinal()] < category.getMaxInstancesPerChunk();
+            }
+            // Leaves end - store mob counts in an array
         }
     }
 }
