From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Thu, 20 Jul 2023 15:18:50 +0800
Subject: [PATCH] Optimize sun burn tick

This patch is Powered by Gale(https://github.com/GaleMC/Gale)

diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 962eff9d67fc31e444dbe54c95cb6e8274f6713b..b14422132c67bfd42d55defa2136268291487b70 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -2034,9 +2034,20 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
 
     @Deprecated
     public float getLightLevelDependentMagicValue() {
-        return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ())
-            ? this.level().getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ()))
-            : 0.0F;
+        // Leaves start - optimize sun burn tick
+        if (!org.leavesmc.leaves.LeavesConfig.performance.optimizeSunBurnTick) {
+            return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level().getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ())) : 0.0F;
+        } else {
+            return this.getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ()));
+        }
+        // Leaves end - optimize sun burn tick
+    }
+
+    // Leaves start - optimize sun burn tick
+    /** @deprecated */
+    @Deprecated
+    public float getLightLevelDependentMagicValue(BlockPos pos) {
+        return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level.getLightLevelDependentMagicValue(pos) : 0.0F;
     }
 
     public void absSnapTo(double x, double y, double z, float yRot, float xRot) {
@@ -2051,6 +2062,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         this.xRotO = this.getXRot();
         this.setYHeadRot(yRot); // Paper - Update head rotation
     }
+    // Leaves end - optimize sun burn tick
 
     public void absSnapTo(double x, double y, double z) {
         double d = Mth.clamp(x, -3.0E7, 3.0E7);
diff --git a/net/minecraft/world/entity/Mob.java b/net/minecraft/world/entity/Mob.java
index c83ad2553145b66aad000be3b82fec57f56359ce..f76d44ebfc5f697a99a49313d3db179dc16c05b7 100644
--- a/net/minecraft/world/entity/Mob.java
+++ b/net/minecraft/world/entity/Mob.java
@@ -1507,20 +1507,43 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
     protected void playAttackSound() {
     }
 
+    // Leaves start - optimize sun burn tick
+    private BlockPos cached_eye_blockpos;
+    private int cached_position_hashcode;
+    // Leaves end - optimize sun burn tick
+
     public boolean isSunBurnTick() {
         if (this.level().isBrightOutside() && !this.level().isClientSide) {
-            float lightLevelDependentMagicValue = this.getLightLevelDependentMagicValue();
-            BlockPos blockPos = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
-            boolean flag = this.isInWaterOrRain() || this.isInPowderSnow || this.wasInPowderSnow;
-            if (lightLevelDependentMagicValue > 0.5F
-                && this.random.nextFloat() * 30.0F < (lightLevelDependentMagicValue - 0.4F) * 2.0F
-                && !flag
-                && this.level().canSeeSky(blockPos)) {
-                return true;
+            // Leaves start - optimize sun burn tick
+            if (!org.leavesmc.leaves.LeavesConfig.performance.optimizeSunBurnTick) {
+                float lightLevelDependentMagicValue = this.getLightLevelDependentMagicValue();
+                BlockPos blockPos = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
+                boolean flag = this.isInWaterOrRain() || this.isInPowderSnow || this.wasInPowderSnow;
+                if (lightLevelDependentMagicValue > 0.5F
+                    && this.random.nextFloat() * 30.0F < (lightLevelDependentMagicValue - 0.4F) * 2.0F
+                    && !flag
+                    && this.level().canSeeSky(blockPos)) {
+                    return true;
+                }
             }
+        } else {
+            int positionHashCode = this.position().hashCode();
+            if (this.cached_eye_blockpos == null || this.cached_position_hashcode != positionHashCode) {
+                this.cached_eye_blockpos = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
+                this.cached_position_hashcode = positionHashCode;
+            }
+
+            float f = this.getLightLevelDependentMagicValue(cached_eye_blockpos); // Pass BlockPos to getBrightness
+
+            // Check brightness first
+            if (f <= 0.5F) return false;
+            if (this.random.nextFloat() * 30.0F >= (f - 0.4F) * 2.0F) return false;
+            boolean flag = this.isInWaterOrRain() || this.isInPowderSnow || this.wasInPowderSnow;
+            return !flag && this.level().canSeeSky(this.cached_eye_blockpos);
         }
 
         return false;
+        // Leaves end - optimize sun burn tick
     }
 
     @Override
