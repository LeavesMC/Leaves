From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Sat, 22 Jul 2023 12:00:59 +0800
Subject: [PATCH] Fix villagers dont release memory


diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index b01e16a278db3807887ee80c61af915eba7f678d..621aed580a5a5db056ebcf7781449a6ff040a4fe 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -3841,7 +3841,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return this;
     }
 
-    private Entity teleportCrossDimension(ServerLevel level, TeleportTransition teleportTransition) {
+    protected Entity teleportCrossDimension(ServerLevel level, TeleportTransition teleportTransition) { // Leaves - private -> protected
         List<Entity> passengers = this.getPassengers();
         List<Entity> list = new ArrayList<>(passengers.size());
         this.ejectPassengers();
diff --git a/net/minecraft/world/entity/npc/Villager.java b/net/minecraft/world/entity/npc/Villager.java
index 2b83262e4a13eae86df82913ce4f3121e3631a43..6b565fcf91e1d94b649dac90bf3c923930d252f8 100644
--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -1017,4 +1017,19 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         Optional<Long> memory = this.brain.getMemory(MemoryModuleType.LAST_SLEPT);
         return memory.filter(_long -> gameTime - _long < 24000L).isPresent();
     }
+
+    // Leaves start - fixes a memory leak when villagers get moved to another world
+    @Override
+    public Entity teleportCrossDimension(ServerLevel world, net.minecraft.world.level.portal.TeleportTransition transition) {
+        if (org.leavesmc.leaves.LeavesConfig.performance.villagersDontReleaseMemoryFix) {
+            this.releaseAllPois();
+            this.getBrain().eraseMemory(MemoryModuleType.HOME);
+            this.getBrain().eraseMemory(MemoryModuleType.JOB_SITE);
+            this.getBrain().eraseMemory(MemoryModuleType.POTENTIAL_JOB_SITE);
+            this.getBrain().eraseMemory(MemoryModuleType.MEETING_POINT);
+            this.refreshBrain(transition.newLevel());
+        }
+        return super.teleportCrossDimension(world, transition);
+    }
+    // Leaves end - fixes a memory leak when villagers get moved to another world
 }
