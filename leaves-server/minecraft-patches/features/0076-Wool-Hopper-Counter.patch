From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Tue, 4 Feb 2025 20:18:35 +0800
Subject: [PATCH] Wool Hopper Counter

This patch is Powered by fabric-carpet(https://github.com/gnembon/fabric-carpet)

diff --git a/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 6dfdd4853d084f63285a7de3db49a245004c4fa5..3145b6ee853f720c5c201f5dd464645eb039100c 100644
--- a/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -205,8 +205,30 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                     flag |= validator.getAsBoolean(); // Paper - note: this is not a validator, it's what adds/sucks in items
                 }
 
+                // Leaves start - Wool hopper counter
+                if (org.leavesmc.leaves.LeavesConfig.modify.hopperCounter.unlimitedSpeed && org.leavesmc.leaves.util.HopperCounter.isEnabled()) {
+                    net.minecraft.world.item.DyeColor woolColor = org.leavesmc.leaves.util.WoolUtils.getWoolColorAtPosition(level, blockEntity.getBlockPos().relative(state.getValue(HopperBlock.FACING)));
+                    if (woolColor != null) {
+                        for (int i = 0; i < Short.MAX_VALUE; i++) {
+                            flag |= suckInItems(level, blockEntity);
+                            if (!flag) {
+                                break;
+                            } else {
+                                woolHopperCounter(level, pos, state, HopperBlockEntity.getContainerAt(level, pos));
+                            }
+                        }
+                    }
+                }
+                // Leaves end - Wool hopper counter
+
                 if (flag) {
                     blockEntity.setCooldown(level.spigotConfig.hopperTransfer); // Spigot
+                    // Leaves start - Wool hopper counter
+                    if (org.leavesmc.leaves.LeavesConfig.modify.hopperCounter.unlimitedSpeed && org.leavesmc.leaves.util.HopperCounter.isEnabled() && woolHopperCounter(level, pos, state, HopperBlockEntity.getContainerAt(level, pos))) {
+                        blockEntity.setCooldown(0);
+                        return true;
+                    }
+                    // Leaves end - Wool hopper counter
                     setChanged(level, pos, state);
                     // Leaves start - pca
                     if (org.leavesmc.leaves.LeavesConfig.protocol.pca.enable) {
@@ -432,6 +454,13 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
     // Paper end - Perf: Optimize Hoppers
 
     private static boolean ejectItems(Level level, BlockPos pos, HopperBlockEntity blockEntity) {
+        // Leaves start - hopper counter
+        if (org.leavesmc.leaves.util.HopperCounter.isEnabled()) {
+            if (woolHopperCounter(level, pos, level.getBlockState(pos), HopperBlockEntity.getContainerAt(level, pos))) {
+                return true;
+            }
+        }
+        // Leaves end - hopper counter
         Container attachedContainer = getAttachedContainer(level, pos, blockEntity);
         if (attachedContainer == null) {
             return false;
@@ -498,6 +527,26 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         }
     }
 
+    // Leaves start - hopper counter
+    private static boolean woolHopperCounter(Level level, BlockPos blockPos, BlockState state, @Nullable Container container) {
+        if (container == null) {
+            return false;
+        }
+        net.minecraft.world.item.DyeColor woolColor = org.leavesmc.leaves.util.WoolUtils.getWoolColorAtPosition(level, blockPos.relative(state.getValue(HopperBlock.FACING)));
+        if (woolColor != null) {
+            for (int i = 0; i < container.getContainerSize(); ++i) {
+                if (!container.getItem(i).isEmpty()) {
+                    ItemStack itemstack = container.getItem(i);
+                    org.leavesmc.leaves.util.HopperCounter.getCounter(woolColor).add(level.getServer(), itemstack);
+                    container.setItem(i, ItemStack.EMPTY);
+                }
+            }
+            return true;
+        }
+        return false;
+    }
+    // Leaves end - hopper counter
+
     private static int[] getSlots(Container container, Direction direction) {
         if (container instanceof WorldlyContainer worldlyContainer) {
             return worldlyContainer.getSlotsForFace(direction);
@@ -632,6 +681,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
     }
 
     public static boolean addItem(Container container, ItemEntity item) {
+        if (org.leavesmc.leaves.LeavesConfig.modify.hopperCounter.unlimitedSpeed && org.leavesmc.leaves.util.HopperCounter.isEnabled() && item.isRemoved()) return false; // Leaves - Wool hopper counter
         boolean flag = false;
         // CraftBukkit start
         if (org.bukkit.event.inventory.InventoryPickupItemEvent.getHandlerList().getRegisteredListeners().length > 0) { // Paper - optimize hoppers
