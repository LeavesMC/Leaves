From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Thu, 14 Sep 2023 20:23:03 +0800
Subject: [PATCH] Force Void Trade


diff --git a/net/minecraft/world/entity/npc/AbstractVillager.java b/net/minecraft/world/entity/npc/AbstractVillager.java
index a375fad192cc09ba83775d5e37c1bb351730e6c4..203e6819aa39de7e932125acb8a0de224918bb6f 100644
--- a/net/minecraft/world/entity/npc/AbstractVillager.java
+++ b/net/minecraft/world/entity/npc/AbstractVillager.java
@@ -43,6 +43,7 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
     @Nullable
     protected MerchantOffers offers;
     private final SimpleContainer inventory = new SimpleContainer(8, (org.bukkit.craftbukkit.entity.CraftAbstractVillager) this.getBukkitEntity()); // CraftBukkit - add argument
+    protected boolean voidTrade = false; // Leaves - force void trade
 
     public AbstractVillager(EntityType<? extends AbstractVillager> entityType, Level level) {
         super(entityType, level);
@@ -144,7 +145,13 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
     @Override
     public void processTrade(MerchantOffer offer, @Nullable io.papermc.paper.event.player.PlayerPurchaseEvent event) { // The MerchantRecipe passed in here is the one set by the PlayerPurchaseEvent
         if (event == null || event.willIncreaseTradeUses()) {
-            offer.increaseUses();
+            // Leaves start - force void trade
+            if (voidTrade) {
+                offer.increaseVoidUses();
+            } else {
+                offer.increaseUses();
+            }
+            // Leaves end - force void trade
         }
         if (event == null || event.isRewardingExp()) {
             this.rewardTradeXp(offer);
@@ -156,7 +163,7 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
     @Override
     public void notifyTrade(MerchantOffer offer) {
         // offer.increaseUses(); // Paper - Add PlayerTradeEvent and PlayerPurchaseEvent
-        this.ambientSoundTime = -this.getAmbientSoundInterval();
+        if (!voidTrade) this.ambientSoundTime = -this.getAmbientSoundInterval(); // Leaves - force void trade
         // this.rewardTradeXp(offer); // Paper - Add PlayerTradeEvent and PlayerPurchaseEvent
         if (this.tradingPlayer instanceof ServerPlayer) {
             CriteriaTriggers.TRADE.trigger((ServerPlayer)this.tradingPlayer, this, offer.getResult());
@@ -173,7 +180,7 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
     @Override
     public void notifyTradeUpdated(ItemStack stack) {
         if (!this.level().isClientSide && this.ambientSoundTime > -this.getAmbientSoundInterval() + 20) {
-            this.ambientSoundTime = -this.getAmbientSoundInterval();
+            if (!voidTrade) this.ambientSoundTime = -this.getAmbientSoundInterval(); // Leaves - force void trade
             this.makeSound(this.getTradeUpdatedSound(!stack.isEmpty()));
         }
     }
@@ -219,6 +226,12 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
     }
 
     protected void stopTrading() {
+        // Leaves start - force void trade
+        this.voidTrade = false;
+        if (this.offers != null) {
+            this.offers.forEach(MerchantOffer::resetVoidUses);
+        }
+        // Leaves end - force void trade
         this.setTradingPlayer(null);
     }
 
@@ -297,4 +310,10 @@ public abstract class AbstractVillager extends AgeableMob implements InventoryCa
     public boolean stillValid(Player player) {
         return this.getTradingPlayer() == player && this.isAlive() && player.canInteractWithEntity(this, 4.0);
     }
+
+    // Leaves start - force void trade
+    public void setVoidTrade() {
+        this.voidTrade = true;
+    }
+    // Leaves end - force void trade
 }
diff --git a/net/minecraft/world/entity/npc/Villager.java b/net/minecraft/world/entity/npc/Villager.java
index 956b949b42a7041290838dde816d3b79e1f9e0d4..1b906f04852637046f03d71f54f950f04c086c46 100644
--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -383,6 +383,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     private void startTrading(Player player) {
+        this.voidTrade = false; // Leaves - force void trade
         this.updateSpecialPrices(player);
         this.setTradingPlayer(player);
         this.openTradingScreen(player, this.getDisplayName(), this.getVillagerData().level());
@@ -622,8 +623,12 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     @Override
     protected void rewardTradeXp(MerchantOffer offer) {
         int i = 3 + this.random.nextInt(4);
-        this.villagerXp = this.villagerXp + offer.getXp();
-        this.lastTradedPlayer = this.getTradingPlayer();
+        // Leaves start - force void trade
+        if (!voidTrade) {
+            this.villagerXp += offer.getXp();
+            this.lastTradedPlayer = this.getTradingPlayer();
+        }
+        // Leaves end - force void trade
         if (this.shouldIncreaseLevel()) {
             this.updateMerchantTimer = 40;
             this.increaseProfessionLevelOnUpdate = true;
diff --git a/net/minecraft/world/entity/npc/WanderingTrader.java b/net/minecraft/world/entity/npc/WanderingTrader.java
index 70cc20483905d3877e2ffb51afb4902bd59f0cd0..066d18609f7f8aa5c14e95e09b454cb7d15f2ed7 100644
--- a/net/minecraft/world/entity/npc/WanderingTrader.java
+++ b/net/minecraft/world/entity/npc/WanderingTrader.java
@@ -123,9 +123,10 @@ public class WanderingTrader extends net.minecraft.world.entity.npc.AbstractVill
                     return InteractionResult.CONSUME;
                 }
 
-                this.setTradingPlayer(player);
-                this.openTradingScreen(player, this.getDisplayName(), 1);
-            }
+                this.voidTrade = false; // Leaves - force void trade
+                    this.setTradingPlayer(player);
+                    this.openTradingScreen(player, this.getDisplayName(), 1);
+                }
 
             return InteractionResult.SUCCESS;
         } else {
diff --git a/net/minecraft/world/inventory/MerchantMenu.java b/net/minecraft/world/inventory/MerchantMenu.java
index d59f67ffe34201c63e3d9706a4434f33b6732edb..bee1d5c30a6ee9b14a23fbcf1c479417f1776ddb 100644
--- a/net/minecraft/world/inventory/MerchantMenu.java
+++ b/net/minecraft/world/inventory/MerchantMenu.java
@@ -25,7 +25,7 @@ public class MerchantMenu extends AbstractContainerMenu {
     private static final int SELLSLOT2_X = 162;
     private static final int BUYSLOT_X = 220;
     private static final int ROW_Y = 37;
-    private final Merchant trader;
+    public final Merchant trader; // Leaves - private -> public
     private final MerchantContainer tradeContainer;
     private int merchantLevel;
     private boolean showProgressBar;
diff --git a/net/minecraft/world/item/trading/MerchantOffer.java b/net/minecraft/world/item/trading/MerchantOffer.java
index 9333c63f217e1207eced37c5be150e192f2fcc3e..0b1a086d3f101b42d95304c69f9e69f4c6c7d906 100644
--- a/net/minecraft/world/item/trading/MerchantOffer.java
+++ b/net/minecraft/world/item/trading/MerchantOffer.java
@@ -39,6 +39,7 @@ public class MerchantOffer {
     public float priceMultiplier;
     public int xp;
     public boolean ignoreDiscounts; // Paper - Add ignore discounts API
+    public int voidTradeUses; // Leaves - force void trade
 
     // CraftBukkit start
     private org.bukkit.craftbukkit.inventory.@org.jspecify.annotations.Nullable CraftMerchantRecipe bukkitHandle;
@@ -78,6 +79,7 @@ public class MerchantOffer {
         this.priceMultiplier = priceMultiplier;
         this.xp = xp;
         this.ignoreDiscounts = ignoreDiscounts; // Paper
+        this.voidTradeUses = 0; // Leaves - force void trade
     }
 
     public MerchantOffer(ItemCost baseCostA, ItemStack result, int maxUses, int xp, float priceMultiplier) {
@@ -166,6 +168,16 @@ public class MerchantOffer {
         this.uses++;
     }
 
+    // Leaves start - force void trade
+    public void increaseVoidUses() {
+        ++this.voidTradeUses;
+    }
+
+    public void resetVoidUses() {
+        this.voidTradeUses = 0;
+    }
+    // Leaves end - force void trade
+
     public int getDemand() {
         return this.demand;
     }
@@ -195,7 +207,7 @@ public class MerchantOffer {
     }
 
     public boolean isOutOfStock() {
-        return this.uses >= this.maxUses;
+        return this.uses + this.voidTradeUses >= this.maxUses; // Leaves - force void trade
     }
 
     public void setToOutOfStock() {
diff --git a/net/minecraft/world/level/block/EndGatewayBlock.java b/net/minecraft/world/level/block/EndGatewayBlock.java
index 68914268ca9350a6c1d794e011e1f9a8aecd609c..f22d502df5f444703a248fff50c864d2924c4549 100644
--- a/net/minecraft/world/level/block/EndGatewayBlock.java
+++ b/net/minecraft/world/level/block/EndGatewayBlock.java
@@ -109,6 +109,17 @@ public class EndGatewayBlock extends BaseEntityBlock implements Portal {
     public TeleportTransition getPortalDestination(ServerLevel level, Entity entity, BlockPos pos) {
         if (level.getBlockEntity(pos) instanceof TheEndGatewayBlockEntity theEndGatewayBlockEntity) {
             Vec3 portalPosition = theEndGatewayBlockEntity.getPortalPosition(level, pos);
+
+            // Leaves start - force void trade
+            if (org.leavesmc.leaves.LeavesConfig.modify.forceVoidTrade && portalPosition != null && entity instanceof net.minecraft.server.level.ServerPlayer player) {
+                if (player.containerMenu instanceof net.minecraft.world.inventory.MerchantMenu merchantMenu) {
+                    if (merchantMenu.trader instanceof net.minecraft.world.entity.npc.AbstractVillager villager) {
+                        villager.setVoidTrade();
+                    }
+                }
+            }
+            // Leaves end - force void trade
+
             if (portalPosition == null) {
                 return null;
             } else {
