From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lumine1909 <133463833+Lumine1909@users.noreply.github.com>
Date: Thu, 6 Feb 2025 00:14:22 +0800
Subject: [PATCH] NOT_FINISH Bytebuf API


diff --git a/net/minecraft/network/chat/Component.java b/net/minecraft/network/chat/Component.java
index 7b88a74885d14759c4e459861e213d28893a6a19..1ea43690876bbc8f9066a1bd36a3b59eef27d96f 100644
--- a/net/minecraft/network/chat/Component.java
+++ b/net/minecraft/network/chat/Component.java
@@ -23,6 +23,18 @@ import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.FormattedCharSequence;
 import net.minecraft.world.level.ChunkPos;
 
+/* TODO: where?
+                .getOrThrow(JsonParseException::new);
+        }
+
+        static JsonElement serialize(Component component, HolderLookup.Provider provider) {
+        public static JsonElement serialize(Component component, HolderLookup.Provider provider) { // Leaves - package -> public
+            return ComponentSerialization.CODEC
+                .encodeStart(provider.createSerializationContext(JsonOps.INSTANCE), component)
+                .getOrThrow(JsonParseException::new);
+
+ */
+
 public interface Component extends Message, FormattedText, Iterable<Component> { // CraftBukkit
 
     // CraftBukkit start
diff --git a/net/minecraft/server/players/PlayerList.java b/net/minecraft/server/players/PlayerList.java
index 968a6bbff3540d781c0925a0db96c0492283d1f2..0d511f3dbb6c41c4ca152303123f3bc2dd90cbbc 100644
--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -385,6 +385,13 @@ public abstract class PlayerList {
             boolean _boolean = gameRules.getBoolean(GameRules.RULE_DO_IMMEDIATE_RESPAWN);
             boolean _boolean1 = gameRules.getBoolean(GameRules.RULE_REDUCEDDEBUGINFO);
             boolean _boolean2 = gameRules.getBoolean(GameRules.RULE_LIMITED_CRAFTING);
+
+            // Leaves start - Bytebuf API
+            if (!(player instanceof org.leavesmc.leaves.bot.ServerBot) && !(player instanceof org.leavesmc.leaves.replay.ServerPhotographer)) {
+                this.cserver.getBytebufHandler().injectPlayer(player);
+            }
+            // Leaves end - Bytebuf API
+
             serverGamePacketListenerImpl.send(
                 new ClientboundLoginPacket(
                     player.getId(),
