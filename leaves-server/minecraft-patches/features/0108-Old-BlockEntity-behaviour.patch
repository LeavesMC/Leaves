From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Wed, 14 Aug 2024 01:48:14 +0800
Subject: [PATCH] Old BlockEntity behaviour


diff --git a/net/minecraft/world/level/block/ChiseledBookShelfBlock.java b/net/minecraft/world/level/block/ChiseledBookShelfBlock.java
index eb315a50a83dc7230d7ad66f4daeb0d632679941..b1694ff1f7c492fb53ec14d7dc7eb8e6ee07f7d9 100644
--- a/net/minecraft/world/level/block/ChiseledBookShelfBlock.java
+++ b/net/minecraft/world/level/block/ChiseledBookShelfBlock.java
@@ -182,7 +182,32 @@ public class ChiseledBookShelfBlock extends BaseEntityBlock {
 
     @Override
     protected void affectNeighborsAfterRemoval(BlockState state, ServerLevel level, BlockPos pos, boolean movedByPiston) {
-        Containers.updateNeighboursAfterDestroy(state, level, pos);
+        // Leaves start - behaviour 1.21.1-
+        if (!org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour) {
+            Containers.updateNeighboursAfterDestroy(state, level, pos);
+            return;
+        }
+
+        BlockState newState = level.getBlockState(pos);
+        if (state.is(newState.getBlock())) {
+            return;
+        }
+
+        BlockEntity blockEntity = level.getBlockEntity(pos);
+        if (blockEntity instanceof ChiseledBookShelfBlockEntity bookshelf) {
+            if (!bookshelf.isEmpty()) {
+                for (int slot = 0; slot < 6; slot++) {
+                    ItemStack item = bookshelf.getItem(slot);
+                    if (!item.isEmpty()) {
+                        Containers.dropItemStack(level, pos.getX(), pos.getY(), pos.getZ(), item);
+                    }
+                }
+                bookshelf.clearContent();
+                level.updateNeighbourForOutputSignal(pos, this);
+            }
+        }
+        super.onRemove(state, level, pos, state, movedByPiston);
+        // Leaves end - behaviour 1.21.1-
     }
 
     @Override
diff --git a/net/minecraft/world/level/block/LecternBlock.java b/net/minecraft/world/level/block/LecternBlock.java
index 5a9b601b7bf7e80b04ebd8f5c8b7d121031132c7..7e815a070d8c3e631efd73fa578cde766416ab47 100644
--- a/net/minecraft/world/level/block/LecternBlock.java
+++ b/net/minecraft/world/level/block/LecternBlock.java
@@ -202,6 +202,7 @@ public class LecternBlock extends BaseEntityBlock {
         if (state.getValue(POWERED)) {
             updateBelow(level, pos, state);
         }
+        if (org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour) super.onRemove(state, level, pos, state, movedByPiston); // Leaves - behaviour 1.21.1-
     }
 
     @Override
diff --git a/net/minecraft/world/level/block/SculkSensorBlock.java b/net/minecraft/world/level/block/SculkSensorBlock.java
index f0101e88140f480c1a94f899744991f78c9e3756..7279debafadafc32253ce141c45e89e750cdc044 100644
--- a/net/minecraft/world/level/block/SculkSensorBlock.java
+++ b/net/minecraft/world/level/block/SculkSensorBlock.java
@@ -134,6 +134,7 @@ public class SculkSensorBlock extends BaseEntityBlock implements SimpleWaterlogg
         if (getPhase(state) == SculkSensorPhase.ACTIVE) {
             updateNeighbours(level, pos, state);
         }
+        if (org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour) super.onRemove(state, level, pos, state, movedByPiston); // Leaves - behaviour 1.21.1-
     }
 
     @Override
diff --git a/net/minecraft/world/level/block/ShulkerBoxBlock.java b/net/minecraft/world/level/block/ShulkerBoxBlock.java
index c34318fdc454ea31655c3c3aa5dbedd3d922ee24..3268a025e329b7e6d75453c445f045e6f8fb68e7 100644
--- a/net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ b/net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -154,7 +154,20 @@ public class ShulkerBoxBlock extends BaseEntityBlock {
 
     @Override
     protected void affectNeighborsAfterRemoval(BlockState state, ServerLevel level, BlockPos pos, boolean movedByPiston) {
-        Containers.updateNeighboursAfterDestroy(state, level, pos);
+        // Leaves start - behaviour 1.21.1-
+        if (!org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour) {
+            Containers.updateNeighboursAfterDestroy(state, level, pos);
+            return;
+        }
+        BlockState newState = level.getBlockState(pos);
+        if (!state.is(newState.getBlock())) {
+            BlockEntity blockEntity = level.getBlockEntity(pos);
+            if (blockEntity instanceof ShulkerBoxBlockEntity) {
+                level.updateNeighbourForOutputSignal(pos, state.getBlock());
+            }
+            super.onRemove(state, level, pos, newState, movedByPiston);
+        }
+        // Leaves end = behaviour 1.21.1-
     }
 
     @Override
diff --git a/net/minecraft/world/level/block/entity/BlockEntity.java b/net/minecraft/world/level/block/entity/BlockEntity.java
index a1075c26d55cc01219acd94d0138f81aa9d34c48..ff5b882c2f1d1b02c3170baebbda6155588a944b 100644
--- a/net/minecraft/world/level/block/entity/BlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BlockEntity.java
@@ -63,7 +63,7 @@ public abstract class BlockEntity {
     }
 
     public boolean isValidBlockState(BlockState state) {
-        return this.type.isValid(state);
+        return org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour || this.type.isValid(state); // Leaves - behaviour 1.21.1-
     }
 
     public static BlockPos getPosFromTag(ChunkPos chunkPos, CompoundTag tag) {
diff --git a/net/minecraft/world/level/block/state/BlockBehaviour.java b/net/minecraft/world/level/block/state/BlockBehaviour.java
index bbb1abfbfe7afd7b631cf269c1e338697cd016d2..8ec5731b0cfd5b987cb464d7b2d737f3425882f7 100644
--- a/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -174,6 +174,15 @@ public abstract class BlockBehaviour implements FeatureElement {
     protected void affectNeighborsAfterRemoval(BlockState state, ServerLevel level, BlockPos pos, boolean movedByPiston) {
     }
 
+    // Leaves start - behaviour 1.21.1-
+    protected void onRemove(BlockState state, Level level, BlockPos pos, BlockState newState, boolean movedByPiston) {
+        org.spigotmc.AsyncCatcher.catchOp("block remove");
+        if (state.hasBlockEntity() && !state.is(newState.getBlock())) {
+            level.removeBlockEntity(pos);
+        }
+    }
+    // Leaves end - behaviour 1.21.1-
+
     // CraftBukkit start
     protected void onPlace(BlockState state, Level level, BlockPos pos, BlockState oldState, boolean movedByPiston, @Nullable net.minecraft.world.item.context.UseOnContext context) {
         this.onPlace(state, level, pos, oldState, movedByPiston);
diff --git a/net/minecraft/world/level/chunk/LevelChunk.java b/net/minecraft/world/level/chunk/LevelChunk.java
index 9714752bfe7019b2578b3b993801d797d642ff96..5f498005408ac11eb373e42712c26a4a66f7d961 100644
--- a/net/minecraft/world/level/chunk/LevelChunk.java
+++ b/net/minecraft/world/level/chunk/LevelChunk.java
@@ -394,6 +394,10 @@ public class LevelChunk extends ChunkAccess implements ca.spottedleaf.moonrise.p
                 boolean flag = !blockState.is(block);
                 boolean flag1 = (flags & 64) != 0;
                 boolean flag2 = (flags & 256) == 0;
+                // Leaves start - behaviour 1.21.4-
+                if (org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour && (flag || block instanceof BaseRailBlock) && this.level instanceof ServerLevel serverLevel && ((flags & 1) != 0 || flag1)) {
+                    blockState.affectNeighborsAfterRemoval(serverLevel, pos, flag1);
+                } // Leaves end - behaviour 1.21.4-
                 if (flag && blockState.hasBlockEntity()) {
                     if (!this.level.isClientSide && flag2) {
                         BlockEntity blockEntity = this.level.getBlockEntity(pos);
@@ -405,7 +409,7 @@ public class LevelChunk extends ChunkAccess implements ca.spottedleaf.moonrise.p
                     this.removeBlockEntity(pos);
                 }
 
-                if ((flag || block instanceof BaseRailBlock) && this.level instanceof ServerLevel serverLevel && ((flags & 1) != 0 || flag1)) {
+                if (!org.leavesmc.leaves.LeavesConfig.modify.oldMC.updater.oldBlockEntityBehaviour && (flag || block instanceof BaseRailBlock) && this.level instanceof ServerLevel serverLevel && ((flags & 1) != 0 || flag1)) { // Leaves - behaviour 1.21.4-
                     blockState.affectNeighborsAfterRemoval(serverLevel, pos, flag1);
                 }
 
