From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: wzp <minecraftwzpmc@163.com>
Date: Sat, 29 Mar 2025 15:00:46 +0800
Subject: [PATCH] feat: add chunk tick schedulers accessor that servux required


diff --git a/net/minecraft/world/ticks/LevelTicks.java b/net/minecraft/world/ticks/LevelTicks.java
index 66abc2e7adee60fa98eed1ba36e018814fd02cad..12d84ea946a7cf469ee55ce257dccd5d00dda428 100644
--- a/net/minecraft/world/ticks/LevelTicks.java
+++ b/net/minecraft/world/ticks/LevelTicks.java
@@ -8,6 +8,7 @@ import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.longs.Long2LongMap.Entry;
 import it.unimi.dsi.fastutil.objects.ObjectIterator;
 import it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet;
+
 import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Comparator;
@@ -19,6 +20,7 @@ import java.util.Set;
 import java.util.function.BiConsumer;
 import java.util.function.LongPredicate;
 import java.util.function.Predicate;
+
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.SectionPos;
@@ -79,6 +81,12 @@ public class LevelTicks<T> implements LevelTickAccess<T> {
         }
     }
 
+    // leaves-start  servux required this var
+    public Long2ObjectMap<LevelChunkTicks<T>> servux$getChunkTickSchedulers() {
+        return this.allContainers;
+    }
+    // leaves-end
+
     public void tick(long gameTime, int maxAllowedTicks, BiConsumer<BlockPos, T> ticker) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("collect");
