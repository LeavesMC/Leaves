From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Sun, 6 Apr 2025 10:42:45 +0800
Subject: [PATCH] Fix SculkCatalyst exp skip


diff --git a/net/minecraft/server/level/ServerPlayer.java b/net/minecraft/server/level/ServerPlayer.java
index fa93076169e19c7d2d1134dea297968a650dc220..d4984c919a88fa930dfec823cd9b471fa47f3565 100644
--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -1087,7 +1087,7 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
         }
 
         // SPIGOT-5478 must be called manually now
-        if (event.shouldDropExperience()) this.dropExperience(this.serverLevel(), cause.getEntity()); // Paper - tie to event
+        if (shouldDropExperience(event.shouldDropExperience(), event.forceUseEventDropStatus())) this.dropExperience(this.serverLevel(), cause.getEntity()); // Paper - tie to event // Leaves - exp fix
         // we clean the player's inventory after the EntityDeathEvent is called so plugins can get the exact state of the inventory.
         if (!event.getKeepInventory()) {
             // Paper start - PlayerDeathEvent#getItemsToKeep
@@ -1134,6 +1134,15 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
         this.setClientLoaded(false);
     }
 
+    // Leaves start - exp fix
+    private boolean shouldDropExperience(boolean eventResult, boolean forceUseEvent) {
+        if (forceUseEvent) {
+            return eventResult;
+        }
+        return wasExperienceConsumed() ? false : eventResult;
+    }
+    // Leaves end - exp fix
+
     private void tellNeutralMobsThatIDied() {
         AABB aabb = new AABB(this.blockPosition()).inflate(32.0, 10.0, 32.0);
         this.level()
diff --git a/net/minecraft/world/entity/LivingEntity.java b/net/minecraft/world/entity/LivingEntity.java
index d2f5118ceeebf95496daabf7597655d6565ad116..8975acf713dd806693e3b3045c98e53321a2e5f4 100644
--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -264,6 +264,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     protected final EntityEquipment equipment;
     // CraftBukkit start
     public int expToDrop;
+    public int expToReward; // Leaves - exp fix
     public List<DefaultDrop> drops = new java.util.ArrayList<>(); // Paper - Restore vanilla drops behavior
     public final org.bukkit.craftbukkit.attribute.CraftAttributeMap craftAttributes;
     public boolean collides = true;
@@ -1829,6 +1830,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
                         entity.killedEntity((ServerLevel) this.level(), this);
                     }
                     this.gameEvent(GameEvent.ENTITY_DIE);
+                    if (!this.wasExperienceConsumed()) this.dropExperience((ServerLevel) this.level(), damageSource.getEntity()); // Leaves - exp fix
                 } else {
                     this.dead = false;
                     this.setHealth((float) deathEvent.getReviveHealth());
@@ -1902,7 +1904,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
         this.drops = new java.util.ArrayList<>();
         // this.dropEquipment(level); // CraftBukkit - moved up
         // CraftBukkit end
-        this.dropExperience(level, damageSource.getEntity());
+        // this.dropExperience(level, damageSource.getEntity()); // Leaves - exp fix
         return deathEvent; // Paper
     }
 
diff --git a/net/minecraft/world/level/block/entity/SculkCatalystBlockEntity.java b/net/minecraft/world/level/block/entity/SculkCatalystBlockEntity.java
index 2627583ab12d886b1fba0b1d1e599f942926b499..be09fa81ed1e58a271156299dacf49be649eecfc 100644
--- a/net/minecraft/world/level/block/entity/SculkCatalystBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/SculkCatalystBlockEntity.java
@@ -96,8 +96,7 @@ public class SculkCatalystBlockEntity extends BlockEntity implements GameEventLi
         public boolean handleGameEvent(ServerLevel level, Holder<GameEvent> gameEvent, GameEvent.Context context, Vec3 pos) {
             if (gameEvent.is(GameEvent.ENTITY_DIE) && context.sourceEntity() instanceof LivingEntity livingEntity) {
                 if (!livingEntity.wasExperienceConsumed()) {
-                    DamageSource lastDamageSource = livingEntity.getLastDamageSource();
-                    int experienceReward = livingEntity.getExperienceReward(level, Optionull.map(lastDamageSource, DamageSource::getEntity));
+                    int experienceReward = livingEntity.expToReward; // Leaves - exp fix
                     if (livingEntity.shouldDropExperience() && experienceReward > 0) {
                         this.sculkSpreader.addCursors(BlockPos.containing(pos.relative(Direction.UP, 0.5)), experienceReward);
                         this.tryAwardItSpreadsAdvancement(level, livingEntity);
