--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -346,6 +_,7 @@
     public void inactiveTick() {
     }
     // Paper end - EAR 2
+    private CompoundTag leavesData = new CompoundTag(); // Leaves - Leaves ex data
 
     public void setOrigin(@javax.annotation.Nonnull org.bukkit.Location location) {
         this.origin = location.toVector();
@@ -2521,6 +_,7 @@
                 compound.putBoolean("Paper.FreezeLock", true);
             }
             // Paper end
+            compound.put("Leaves.Data", leavesData); // Leaves - leaves ex data
             return compound;
         } catch (Throwable var9) {
             CrashReport crashReport = CrashReport.forThrowable(var9, "Saving entity NBT");
@@ -2670,6 +_,11 @@
                 freezeLocked = compound.getBoolean("Paper.FreezeLock");
             }
             // Paper end
+            // Leaves start - leaves ex data
+            if (compound.contains("Leaves.Data")) {
+                leavesData = compound.getCompound("Leaves.Data");
+            }
+            // Leaves end - leaves ex data
         } catch (Throwable var17) {
             CrashReport crashReport = CrashReport.forThrowable(var17, "Loading entity NBT");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Entity being loaded");
@@ -5077,4 +_,9 @@
         return ((ServerLevel) this.level).isPositionEntityTicking(this.blockPosition());
     }
     // Paper end - Expose entity id counter
+    // Leaves start - leaves ex data
+    public CompoundTag getLeavesData() {
+        return leavesData;
+    }
+    // Leaves end - leaves ex data
 }
