From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Wed, 17 Aug 2022 10:56:49 +0800
Subject: [PATCH] Remove lambda from ticking guard

This patch is Powered by Pufferfish(https://github.com/pufferfish-gg/Pufferfish)

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 879c02f8d6ae9a0e12d74df37cbb050f9895762b..72f771e03f0b24e3b301d925600b550552ade8e6 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -908,7 +908,24 @@ public class ServerLevel extends Level implements WorldGenLevel {
                             }
 
                             gameprofilerfiller.push("tick");
-                            this.guardEntityTick(this::tickNonPassenger, entity);
+                            // Leaves start - copied from this.guardEntityTick
+                            if (top.leavesmc.leaves.LeavesConfig.removeTickGuardLambda) {
+                                try {
+                                    this.tickNonPassenger(entity); // Leaves - changed
+                                    MinecraftServer.getServer().executeMidTickTasks(); // Tuinity - execute chunk tasks mid tick
+                                } catch (Throwable throwable) {
+                                    if (throwable instanceof ThreadDeath) throw throwable; // Paper
+                                    // Paper start - Prevent tile entity and entity crashes
+                                    final String msg = String.format("Entity threw exception at %s:%s,%s,%s", entity.level().getWorld().getName(), entity.getX(), entity.getY(), entity.getZ());
+                                    MinecraftServer.LOGGER.error(msg, throwable);
+                                    getCraftServer().getPluginManager().callEvent(new com.destroystokyo.paper.event.server.ServerExceptionEvent(new com.destroystokyo.paper.exception.ServerInternalException(msg, throwable)));
+                                    entity.discard();
+                                    // Paper end
+                                }
+                            } else {
+                                this.guardEntityTick(this::tickNonPassenger, entity);
+                            }
+                            // Leaves end - copied from this.guardEntityTick
                             gameprofilerfiller.pop();
                         }
                     }
