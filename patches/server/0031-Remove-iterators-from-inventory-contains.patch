From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Wed, 17 Aug 2022 11:04:12 +0800
Subject: [PATCH] Remove iterators from inventory contains

This patch is Powered by Pufferfish(https://github.com/pufferfish-gg/Pufferfish)

diff --git a/src/main/java/net/minecraft/world/entity/player/Inventory.java b/src/main/java/net/minecraft/world/entity/player/Inventory.java
index ca7fbe4f8c1e1d2fb90095aa35be4dda3029c23e..f146d01f4e91b7100a9bbea2c2b13f045f7116b5 100644
--- a/src/main/java/net/minecraft/world/entity/player/Inventory.java
+++ b/src/main/java/net/minecraft/world/entity/player/Inventory.java
@@ -643,14 +643,27 @@ public class Inventory implements Container, Nameable {
     }
 
     public boolean contains(ItemStack stack) {
-        Iterator iterator = this.compartments.iterator();
+        // Leaves start - don't allocate iterators
+        if (top.leavesmc.leaves.LeavesConfig.removeInventoryContainsIterators) {
+            for (int i = 0; i < this.compartments.size(); i++) {
+                List<ItemStack> list = this.compartments.get(i);
+                for (int j = 0; j < list.size(); j++) {
+                    ItemStack itemstack1 = list.get(j);
+
+                    if (!itemstack1.isEmpty() && ItemStack.isSameItemSameTags(itemstack1, stack)) {
+                        return true;
+                    }
+                }
+            }
+        } else {
+            Iterator iterator = this.compartments.iterator();
 
         while (iterator.hasNext()) {
             List<ItemStack> list = (List) iterator.next();
             Iterator iterator1 = list.iterator();
 
-            while (iterator1.hasNext()) {
-                ItemStack itemstack1 = (ItemStack) iterator1.next();
+                while (iterator1.hasNext()) {
+                    ItemStack itemstack1 = (ItemStack) iterator1.next();
 
                 if (!itemstack1.isEmpty() && ItemStack.isSameItemSameComponents(itemstack1, stack)) {
                     return true;
@@ -683,9 +696,9 @@ public class Inventory implements Container, Nameable {
     public boolean contains(Predicate<ItemStack> predicate) {
         Iterator iterator = this.compartments.iterator();
 
-        while (iterator.hasNext()) {
-            List<ItemStack> list = (List) iterator.next();
-            Iterator iterator1 = list.iterator();
+            while (iterator.hasNext()) {
+                List<ItemStack> list = (List) iterator.next();
+                Iterator iterator1 = list.iterator();
 
             while (iterator1.hasNext()) {
                 ItemStack itemstack = (ItemStack) iterator1.next();
@@ -695,7 +708,7 @@ public class Inventory implements Container, Nameable {
                 }
             }
         }
-
+        // Leaves end - don't allocate iterators
         return false;
     }
 
