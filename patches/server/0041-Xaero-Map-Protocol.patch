From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Fri, 27 Jan 2023 09:42:57 +0800
Subject: [PATCH] Xaero Map Protocol


diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index eb43b1fcda50326f086999a6e134c9807b837045..7a80d3e7d46a9c2a729ca50e2bd265fe5711a23f 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1256,6 +1256,7 @@ public abstract class PlayerList {
         player.connection.send(new ClientboundInitializeBorderPacket(worldborder));
         player.connection.send(new ClientboundSetTimePacket(world.getGameTime(), world.getDayTime(), world.getGameRules().getBoolean(GameRules.RULE_DAYLIGHT)));
         player.connection.send(new ClientboundSetDefaultSpawnPositionPacket(world.getSharedSpawnPos(), world.getSharedSpawnAngle()));
+        org.leavesmc.leaves.protocol.XaeroMapProtocol.onSendWorldInfo(player); // Leaves - xaero map protocol
         if (world.isRaining()) {
             // CraftBukkit start - handle player weather
             // entityplayer.connection.send(new PacketPlayOutGameStateChange(PacketPlayOutGameStateChange.START_RAINING, 0.0F));
diff --git a/src/main/java/org/leavesmc/leaves/protocol/XaeroMapProtocol.java b/src/main/java/org/leavesmc/leaves/protocol/XaeroMapProtocol.java
new file mode 100644
index 0000000000000000000000000000000000000000..a94b5174282e0cb520c99a93cae7d3f439cd9cc8
--- /dev/null
+++ b/src/main/java/org/leavesmc/leaves/protocol/XaeroMapProtocol.java
@@ -0,0 +1,42 @@
+package org.leavesmc.leaves.protocol;
+
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.server.level.ServerPlayer;
+import org.jetbrains.annotations.Contract;
+import org.jetbrains.annotations.NotNull;
+import org.leavesmc.leaves.LeavesConfig;
+import org.leavesmc.leaves.protocol.core.LeavesProtocol;
+import org.leavesmc.leaves.protocol.core.ProtocolUtils;
+
+@LeavesProtocol(namespace = {"xaerominimap", "xaeroworldmap"})
+public class XaeroMapProtocol {
+
+    public static final String PROTOCOL_ID_MINI = "xaerominimap";
+    public static final String PROTOCOL_ID_WORLD = "xaeroworldmap";
+
+    private static final ResourceLocation MINIMAP_KEY = idMini("main");
+    private static final ResourceLocation WORLDMAP_KEY = idWorld("main");
+
+    @Contract("_ -> new")
+    public static @NotNull ResourceLocation idMini(String path) {
+        return new ResourceLocation(PROTOCOL_ID_MINI, path);
+    }
+
+    @Contract("_ -> new")
+    public static @NotNull ResourceLocation idWorld(String path) {
+        return new ResourceLocation(PROTOCOL_ID_WORLD, path);
+    }
+
+    public static void onSendWorldInfo(@NotNull ServerPlayer player) {
+        if (LeavesConfig.protocol.xaeroMapProtocol) {
+            ProtocolUtils.sendPayloadPacket(player, MINIMAP_KEY, buf -> {
+                buf.writeByte(0);
+                buf.writeInt(LeavesConfig.protocol.xaeroMapServerID);
+            });
+            ProtocolUtils.sendPayloadPacket(player, WORLDMAP_KEY, buf -> {
+                buf.writeByte(0);
+                buf.writeInt(LeavesConfig.protocol.xaeroMapServerID);
+            });
+        }
+    }
+}
