From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Tue, 24 Jan 2023 12:38:42 +0800
Subject: [PATCH] Return nether portal fix

This patch is powered by NetherPortalFix(https://github.com/TwelveIterationMods/NetherPortalFix)

diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 66b4bc82c53ce227066625fdc49614bb254dc7f4..7995a286c5d38a90cb596bc9da937a0bcb388004 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -19,6 +19,7 @@ import java.util.UUID;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 import net.minecraft.BlockUtil;
+import top.leavesmc.leaves.util.ReturnPortalManager;
 import net.minecraft.ChatFormatting;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -1358,6 +1359,24 @@ public class ServerPlayer extends Player {
                 PlayerChangedWorldEvent changeEvent = new PlayerChangedWorldEvent(this.getBukkitEntity(), worldserver1.getWorld());
                 this.level().getCraftServer().getPluginManager().callEvent(changeEvent);
                 // CraftBukkit end
+                // Leaves start - nether portal fix
+                if (top.leavesmc.leaves.LeavesConfig.netherPortalFix) {
+                    final ResourceKey<Level> fromDim = worldserver1.dimension();
+                    final ResourceKey<Level> toDim = level().dimension();
+                    final ResourceKey<Level> OVERWORLD = Level.OVERWORLD;
+                    final ResourceKey<Level> THE_NETHER = Level.NETHER;
+                    if (!((fromDim != OVERWORLD || toDim != THE_NETHER) && (fromDim != THE_NETHER || toDim != OVERWORLD))) {
+                        BlockPos lastPos = this.lastPos;
+                        if (lastPos != null) {
+                            BlockUtil.FoundRectangle fromPortal = ReturnPortalManager.findPortalAt(this, fromDim, lastPos);
+                            BlockPos toPos = this.blockPosition();
+                            if (fromPortal != null) {
+                                ReturnPortalManager.storeReturnPortal(this, toDim, toPos, fromPortal);
+                            }
+                        }
+                    }
+                }
+                // Leaves end - nether portal fix
             }
             // Paper start - Reset shield blocking on dimension change
             if (this.isBlocking()) {
@@ -1410,6 +1429,30 @@ public class ServerPlayer extends Player {
     protected Optional<BlockUtil.FoundRectangle> getExitPortal(ServerLevel worldserver, BlockPos blockposition, boolean flag, WorldBorder worldborder, int searchRadius, boolean canCreatePortal, int createRadius) { // CraftBukkit
         Optional<BlockUtil.FoundRectangle> optional = super.getExitPortal(worldserver, blockposition, flag, worldborder, searchRadius, canCreatePortal, createRadius); // CraftBukkit
 
+        // Leaves start - nether portal fix
+        if (top.leavesmc.leaves.LeavesConfig.netherPortalFix) {
+            BlockPos fromPos = blockPosition();
+            final ResourceKey<Level> fromDim = level().dimension();
+            final ResourceKey<Level> toDim = level().dimension();
+            final ResourceKey<Level> OVERWORLD = Level.OVERWORLD;
+            final ResourceKey<Level> THE_NETHER = Level.NETHER;
+            boolean isTeleportBetweenNetherAndOverworld = (fromDim == OVERWORLD && toDim == THE_NETHER)
+                || (fromDim == THE_NETHER && toDim == OVERWORLD);
+            if (isInsidePortal && isTeleportBetweenNetherAndOverworld) {
+                ReturnPortalManager.ReturnPortal returnPortal = ReturnPortalManager.findReturnPortal(this, fromDim, fromPos);
+                if (returnPortal != null) {
+                    MinecraftServer server = getServer();
+                    if (server != null) {
+                        Level toLevel = server.getLevel(toDim);
+                        if (toLevel != null) {
+                            return Optional.of(returnPortal.rectangle());
+                        }
+                    }
+                }
+            }
+        }
+        // Leaves end - nether portal fix
+
         if (optional.isPresent() || !canCreatePortal) { // CraftBukkit
             return optional;
         } else {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 823eeb965a32f75415cb6b0a406f7f4f6e3b6871..7d99a70c1eb3aecb2da01557d7c132c15d417fee 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -26,6 +26,7 @@ import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.ChatFormatting;
 import net.minecraft.FileUtil;
+import top.leavesmc.leaves.util.ReturnPortalManager; // Leaves - return portal fix
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.LayeredRegistryAccess;
@@ -983,6 +984,24 @@ public abstract class PlayerList {
         if (fromWorld != location.getWorld()) {
             PlayerChangedWorldEvent event = new PlayerChangedWorldEvent(entityplayer.getBukkitEntity(), fromWorld);
             this.server.server.getPluginManager().callEvent(event);
+            // Leaves start - nether portal fix
+            if (top.leavesmc.leaves.LeavesConfig.netherPortalFix) {
+                final ResourceKey<Level> fromDim = entityplayer.level().dimension();
+                final ResourceKey<Level> toDim = entityplayer1.level().dimension();
+                final ResourceKey<Level> OVERWORLD = Level.OVERWORLD;
+                final ResourceKey<Level> THE_NETHER = Level.NETHER;
+                if (!((fromDim != OVERWORLD || toDim != THE_NETHER) && (fromDim != THE_NETHER || toDim != OVERWORLD))) {
+                    BlockPos lastPos = entityplayer1.lastPos;
+                    if (lastPos != null) {
+                        net.minecraft.BlockUtil.FoundRectangle fromPortal = ReturnPortalManager.findPortalAt(entityplayer1, fromDim, lastPos);
+                        BlockPos toPos = entityplayer1.blockPosition();
+                        if (fromPortal != null) {
+                            ReturnPortalManager.storeReturnPortal(entityplayer1, toDim, toPos, fromPortal);
+                        }
+                    }
+                }
+            }
+            // Leaves end - nether portal fix
         }
 
         // Save player file again if they were disconnected
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 40b1990cde0cacbf637039fa1f9e50f31d0428a8..c27d3caaf53d8d745fa5d054f57c9de50e60e2de 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -251,7 +251,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     protected ItemStack useItem;
     public int useItemRemaining;
     protected int fallFlyTicks;
-    private BlockPos lastPos;
+    public BlockPos lastPos; // Leaves - private -> public
     private Optional<BlockPos> lastClimbablePos;
     @Nullable
     private DamageSource lastDamageSource;
