From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Sun, 2 Jul 2023 09:25:00 +0800
Subject: [PATCH] Elytra aeronautics no chunk load


diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 9a226396b4c38768574d5785744f22e61d6913f3..9a5488df906a0a3dd07f94942750fe9b646a96d9 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -791,7 +791,8 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
     }
 
     private boolean skipPlayer(ServerPlayer player) {
-        return player.isSpectator() && !this.level.getGameRules().getBoolean(GameRules.RULE_SPECTATORSGENERATECHUNKS);
+        return (player.isSpectator() && !this.level.getGameRules().getBoolean(GameRules.RULE_SPECTATORSGENERATECHUNKS))
+            || (org.leavesmc.leaves.LeavesConfig.modify.elytraAeronautics.noChunk && player.elytraAeronauticsNoChunk); // Leaves - Elytra aeronautics
     }
 
     void updatePlayerStatus(ServerPlayer player, boolean added) {
@@ -829,6 +830,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
     }
 
     public void move(ServerPlayer player) {
+        if (player.elytraAeronauticsNoChunk) return; // Leaves - no chunk
         // Paper - optimise entity tracker
 
         SectionPos sectionposition = player.getLastSectionPos();
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index c5427e40ff55f90aca61866837311d30a74f0f08..4c3a4d6021fe3d02a5c8283eb86293a64b762da5 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -564,7 +564,7 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                 speed *= 2f; // TODO: Get the speed of the vehicle instead of the player
 
                 // Paper start - Prevent moving into unloaded chunks
-                if (this.player.level().paperConfig().chunks.preventMovingIntoUnloadedChunks && (
+                if (this.player.level().paperConfig().chunks.preventMovingIntoUnloadedChunks && !player.elytraAeronauticsNoChunk && ( // Leaves - no chunk load
                     !worldserver.areChunksLoadedForMove(this.player.getBoundingBox().expandTowards(new Vec3(toX, toY, toZ).subtract(this.player.position()))) ||
                         !worldserver.areChunksLoadedForMove(entity.getBoundingBox().expandTowards(new Vec3(toX, toY, toZ).subtract(entity.position())))
                     )) {
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index b7d5a1f56067c6fec74d653b0da48e9610def283..13956aa8210d0234176a9d7450afdf42a2311f11 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -1186,7 +1186,13 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                     return;
                 }
             }
-
+            // Leaves start - elytra aeronautics
+            if (org.leavesmc.leaves.LeavesConfig.modify.elytraAeronautics.noChunk && this instanceof Player player) {
+                if (type == MoverType.PLAYER && player.isFallFlying()) {
+                    org.leavesmc.leaves.util.ElytraAeronauticsHelper.flightBehaviour(player, movement);
+                }
+            }
+            // Leaves end - elytra aeronautics
             ProfilerFiller gameprofilerfiller = Profiler.get();
 
             gameprofilerfiller.push("move");
@@ -2184,6 +2190,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         this.yo = y;
         this.zo = d4;
         this.setPos(d3, y, d4);
+        if (this instanceof Player player && player.elytraAeronauticsNoChunk) return; // Leaves - elytra aeronautics
         if (this.valid) this.level.getChunk((int) Math.floor(this.getX()) >> 4, (int) Math.floor(this.getZ()) >> 4); // CraftBukkit
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index e4bb0b2eb8512f75042dab77bb79b4f51742ab4e..b36d67774cf34cf95bcfbaa2fc8cb4f56b1e7557 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -197,6 +197,7 @@ public abstract class Player extends LivingEntity {
     private int currentImpulseContextResetGraceTime;
     public boolean affectsSpawning = true; // Paper - Affects Spawning API
     public net.kyori.adventure.util.TriState flyingFallDamage = net.kyori.adventure.util.TriState.NOT_SET; // Paper - flying fall damage
+    public boolean elytraAeronauticsNoChunk = false; // Leaves - Elytra aeronautics
 
     // CraftBukkit start
     public boolean fauxSleeping;
diff --git a/src/main/java/org/leavesmc/leaves/util/ElytraAeronauticsHelper.java b/src/main/java/org/leavesmc/leaves/util/ElytraAeronauticsHelper.java
new file mode 100644
index 0000000000000000000000000000000000000000..96282f07cbb4609741e66b53ec639de0cc33f6b6
--- /dev/null
+++ b/src/main/java/org/leavesmc/leaves/util/ElytraAeronauticsHelper.java
@@ -0,0 +1,40 @@
+package org.leavesmc.leaves.util;
+
+import ca.spottedleaf.moonrise.common.util.ChunkSystem;
+import net.minecraft.core.SectionPos;
+import net.minecraft.network.chat.Component;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.phys.Vec3;
+import org.leavesmc.leaves.LeavesConfig;
+
+public class ElytraAeronauticsHelper {
+
+    public static void flightBehaviour(Player player, Vec3 velocity) {
+        if (LeavesConfig.modify.elytraAeronautics.noChunk) {
+            if ((LeavesConfig.modify.elytraAeronautics.noChunkSpeed <= 0.0D || velocity.horizontalDistanceSqr() >= LeavesConfig.modify.elytraAeronautics.noChunkSpeed)
+                    && (LeavesConfig.modify.elytraAeronautics.noChunkHeight <= 0.0D || player.getY() >= LeavesConfig.modify.elytraAeronautics.noChunkHeight)) {
+                if (!player.elytraAeronauticsNoChunk) {
+                    player.elytraAeronauticsNoChunk = true;
+                    ServerPlayer serverPlayer = (ServerPlayer) player;
+                    if (LeavesConfig.modify.elytraAeronautics.noChunkMes) {
+                        serverPlayer.sendSystemMessage(Component.literal(LeavesConfig.modify.elytraAeronautics.noChunkStartMes), true);
+                    }
+                    ChunkSystem.removePlayerFromDistanceMaps((ServerLevel) serverPlayer.level(), serverPlayer);
+                    ((ServerLevel) serverPlayer.level()).chunkSource.chunkMap.getDistanceManager().removePlayer(serverPlayer.getLastSectionPos(), serverPlayer);
+                }
+            } else {
+                if (player.elytraAeronauticsNoChunk) {
+                    player.elytraAeronauticsNoChunk = false;
+                    ServerPlayer serverPlayer = (ServerPlayer) player;
+                    if (LeavesConfig.modify.elytraAeronautics.noChunkMes) {
+                        serverPlayer.sendSystemMessage(Component.literal(LeavesConfig.modify.elytraAeronautics.noChunkEndMes), true);
+                    }
+                    ChunkSystem.addPlayerToDistanceMaps((ServerLevel) serverPlayer.level(), serverPlayer);
+                    ((ServerLevel) serverPlayer.level()).chunkSource.chunkMap.getDistanceManager().addPlayer(SectionPos.of(serverPlayer), serverPlayer);
+                }
+            }
+        }
+    }
+}
