From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Thu, 20 Jul 2023 15:18:50 +0800
Subject: [PATCH] Optimize sun burn tick

This patch is Powered by Gale(https://github.com/GaleMC/Gale)

diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 875b4cf7243681062b6f4081f6b6e9db07e8c1a3..ebf632acc90a6f8a23208da49152fc1fdd5a0e69 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2023,8 +2023,22 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
     /** @deprecated */
     @Deprecated
     public float getLightLevelDependentMagicValue() {
-        return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level().getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ())) : 0.0F;
+        // Leaves start - optimize sun burn tick
+        if (!top.leavesmc.leaves.LeavesConfig.optimizeSunBurnTick) {
+            return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level().getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ())) : 0.0F;
+        } else {
+            return this.getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ()));
+        }
+        // Leaves end - optimize sun burn tick
+    }
+
+    // Leaves start - optimize sun burn tick
+    /** @deprecated */
+    @Deprecated
+    public float getLightLevelDependentMagicValue(BlockPos pos) {
+        return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level.getLightLevelDependentMagicValue(pos) : 0.0F;
     }
+    // Leaves end - optimize sun burn tick
 
     public void absMoveTo(double x, double y, double z, float yaw, float pitch) {
         this.absMoveTo(x, y, z);
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index ab781eeb24f832a13b1cedf73ca6391daaf58248..968f0baa02e32653d2fdcfaa07fca1ade195b0ee 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1723,15 +1723,41 @@ public abstract class Mob extends LivingEntity implements Targeting {
 
     }
 
+    // Leaves start - optimize sun burn tick
+    private BlockPos cached_eye_blockpos;
+    private int cached_position_hashcode;
+    // Leaves end - optimize sun burn tick
+
     public boolean isSunBurnTick() {
         if (this.level().isDay() && !this.level().isClientSide) {
-            float f = this.getLightLevelDependentMagicValue();
-            BlockPos blockposition = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
-            boolean flag = this.isInWaterRainOrBubble() || this.isInPowderSnow || this.wasInPowderSnow;
+            // Leaves start - optimize sun burn tick
+            if (!top.leavesmc.leaves.LeavesConfig.optimizeSunBurnTick) {
+                float f = this.getLightLevelDependentMagicValue();
+                BlockPos blockposition = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
+                boolean flag = this.isInWaterRainOrBubble() || this.isInPowderSnow || this.wasInPowderSnow;
 
-            if (f > 0.5F && this.random.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && !flag && this.level().canSeeSky(blockposition)) {
-                return true;
+                if (f > 0.5F && this.random.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && !flag && this.level().canSeeSky(blockposition)) {
+                    return true;
+                }
+            } else {
+                int positionHashCode = this.position().hashCode();
+                if (this.cached_position_hashcode != positionHashCode) {
+                    this.cached_eye_blockpos = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
+                    this.cached_position_hashcode = positionHashCode;
+                }
+
+                float f = this.getLightLevelDependentMagicValue(cached_eye_blockpos); // Pass BlockPos to getBrightness
+
+                // Check brightness first
+                if (f <= 0.5F) return false;
+                if (this.random.nextFloat() * 30.0F >= (f - 0.4F) * 2.0F) return false;
+                boolean flag = this.isInWaterRainOrBubble() || this.isInPowderSnow || this.wasInPowderSnow;
+
+                if (!flag && this.level().canSeeSky(this.cached_eye_blockpos)) {
+                    return true;
+                }
             }
+            // Leaves end - optimize sun burn tick
         }
 
         return false;
