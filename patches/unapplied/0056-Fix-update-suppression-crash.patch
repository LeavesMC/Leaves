From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Fri, 17 Mar 2023 15:57:08 +0800
Subject: [PATCH] Fix update suppression crash


diff --git a/src/main/java/net/minecraft/network/protocol/PacketUtils.java b/src/main/java/net/minecraft/network/protocol/PacketUtils.java
index d2f0a0755317f5fa9a1ccf7db346aa77fd287d80..9c7fb1b7c2ff458e72bdcfa80c49252cd78e7d14 100644
--- a/src/main/java/net/minecraft/network/protocol/PacketUtils.java
+++ b/src/main/java/net/minecraft/network/protocol/PacketUtils.java
@@ -49,6 +49,10 @@ public class PacketUtils {
                     co.aikar.timings.Timing timing = co.aikar.timings.MinecraftTimings.getPacketTiming(packet); // Paper - timings
                     try (co.aikar.timings.Timing ignored = timing.startTiming()) { // Paper - timings
                         packet.handle(listener);
+                    // Leaves start - update suppression crash fix
+                    } catch (top.leavesmc.leaves.util.UpdateSuppressionException exception) {
+                        top.leavesmc.leaves.LeavesLogger.LOGGER.info(exception.getMessage());
+                    // Leaves start - update suppression crash fix
                     } catch (Exception exception) {
                         if (listener.shouldPropagateHandlingExceptions()) {
                             throw exception;
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 43638595413bbcc5dcaf04daa8c1df05c42c9f4f..eacdae0f90a4d09d2cd978c65b783d1329aba41c 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1560,7 +1560,13 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
             try {
                 worldserver.timings.doTick.startTiming(); // Spigot
-                worldserver.tick(shouldKeepTicking);
+                // Leaves start
+                try {
+                    worldserver.tick(shouldKeepTicking);
+                } catch (top.leavesmc.leaves.util.UpdateSuppressionException e) {
+                    top.leavesmc.leaves.LeavesLogger.LOGGER.info(e.getMessage());
+                }
+                // Leaves end
                 // Paper start
                 for (final io.papermc.paper.chunk.SingleThreadChunkRegionManager regionManager : worldserver.getChunkSource().chunkMap.regionManagers) {
                     regionManager.recalculateRegions();
diff --git a/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java b/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
index b51155ad12515b2d0dd0f202580b9f455c114d9a..49a4a19fd5292552e91799203108084ff4c1fa29 100644
--- a/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -253,7 +253,17 @@ public class ShulkerBoxBlock extends BaseEntityBlock {
 
     @Override
     public int getAnalogOutputSignal(BlockState state, Level world, BlockPos pos) {
-        return AbstractContainerMenu.getRedstoneSignalFromContainer((Container)world.getBlockEntity(pos));
+        // Leaves start - fix update suppression crash
+        if (top.leavesmc.leaves.LeavesConfig.updateSuppressionCrashFix) {
+            try {
+                return AbstractContainerMenu.getRedstoneSignalFromContainer((Container)world.getBlockEntity(pos));
+            } catch (ClassCastException ex) {
+                throw new top.leavesmc.leaves.util.UpdateSuppressionException(null, pos);
+            }
+        } else {
+            return AbstractContainerMenu.getRedstoneSignalFromContainer((Container)world.getBlockEntity(pos));
+        }
+        // Leaves end - fix update suppression crash
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java b/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
index 19faa8f5f891c1ffbed0af8391dee8202433c447..2ef9510ee382dfcc25a213684c0acdbc352811df 100644
--- a/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
+++ b/src/main/java/net/minecraft/world/level/redstone/NeighborUpdater.java
@@ -66,9 +66,17 @@ public interface NeighborUpdater {
             state.neighborChanged(world, pos, sourceBlock, sourcePos, notify);
             // Spigot Start
         } catch (StackOverflowError ex) {
+            // Leaves start - fix update suppression crash
+            if (top.leavesmc.leaves.LeavesConfig.updateSuppressionCrashFix) {
+                throw new top.leavesmc.leaves.util.UpdateSuppressionException(pos, sourcePos);
+            }
             world.lastPhysicsProblem = new BlockPos(pos);
             // Spigot End
         } catch (Throwable throwable) {
+            if (top.leavesmc.leaves.LeavesConfig.updateSuppressionCrashFix) {
+                throw new top.leavesmc.leaves.util.UpdateSuppressionException(pos, sourcePos);
+            }
+            // Leaves end - fix update suppression crash
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Exception while updating neighbours");
             CrashReportCategory crashreportsystemdetails = crashreport.addCategory("Block being updated");
 
diff --git a/src/main/java/top/leavesmc/leaves/util/UpdateSuppressionException.java b/src/main/java/top/leavesmc/leaves/util/UpdateSuppressionException.java
new file mode 100644
index 0000000000000000000000000000000000000000..f9a9f3e28bebdaa5038ebf81ac53447182c2bc10
--- /dev/null
+++ b/src/main/java/top/leavesmc/leaves/util/UpdateSuppressionException.java
@@ -0,0 +1,33 @@
+package top.leavesmc.leaves.util;
+
+import net.minecraft.core.BlockPos;
+
+public class UpdateSuppressionException extends RuntimeException {
+
+    private final BlockPos pos;
+    private final BlockPos source;
+
+    public UpdateSuppressionException(BlockPos pos, BlockPos source) {
+        super("Update suppression");
+        this.pos = pos;
+        this.source = source;
+    }
+
+    public BlockPos getPos() {
+        return pos;
+    }
+
+    public BlockPos getSource() {
+        return source;
+    }
+
+    public String getMessage() {
+        if (pos != null) {
+            return "An update suppression processed, form [x:%d,y:%d,z:%d] to [x:%d,y:%d,z:%d]"
+                .formatted(source.getX(), source.getY(), source.getZ(), pos.getX(), pos.getY(), pos.getZ());
+        } else {
+            return "An update suppression processed, form [x:%d,y:%d,z:%d]"
+                .formatted(source.getX(), source.getY(), source.getZ());
+        }
+    }
+}
